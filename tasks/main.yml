---
- name: Install apt-transport-https
  apt:
    name: apt-transport-https

- name: Add apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add apt repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    filename: docker

- name: Create docker config directory
  file:
    path: /etc/docker
    state: directory

- name: Write docker config
  copy:
    content: "{{ docker_daemon_config | to_nice_json }}\n"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0640
  notify: Reload docker

- name: Add users to the docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items:
    - "{{ docker_privileged_users }}"

# If this fails, try rebooting the target machine.
- name: Install required packages
  apt:
    name:
      - docker-ce
      - docker-compose
      - python3-docker
      - python3-jsondiff

- meta: flush_handlers

- name: Enable docker service
  service:
    name: docker
    enabled: True
    state: started

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /etc/docker/stacks

# docker_swarm: Setup

- name: docker_swarm.setup
  docker_swarm:
    state: join
    join_token: "{{ docker_swarm.setup.join_token }}"
    advertise_addr: "{{ docker_swarm.setup.advertise_addr }}"
    listen_addr: "{{ docker_swarm.setup.listen_addr | default('0.0.0.0:2377') }}"
    remote_addrs: "{{ docker_swarm.setup.remote_addrs }}"
  when: docker_swarm.enable

# docker_compose_projects

- name: docker_compose
  include_tasks: project.yml
  loop: "{{ (docker_compose_projects | default({})).keys() | list }}"
  loop_control:
    loop_var: project_name

# docker_swarm: Deploy early stacks

- name: docker_swarm.deploy (early)
  include_tasks: stack.yml
  loop: "{{ (docker_swarm.deploy.pre_build_stacks | default({})).keys() | list }}"
  loop_control:
    loop_var: stack_name
  vars:
    stack_category: pre_build_stacks
  when: docker_swarm.enable | default(false)

# docker_build

- name: docker_build
  include_tasks: image.yml
  loop: "{{ (docker_build.images | default({})).keys() | list }}"
  loop_control:
    loop_var: image_name

# docker_swarm: Deploy stacks

- name: docker_swarm.deploy
  include_tasks: stack.yml
  loop: "{{ (docker_swarm.deploy.stacks | default({})).keys() | list }}"
  loop_control:
    loop_var: stack_name
  vars:
    stack_category: stacks
  when: docker_swarm.enable
